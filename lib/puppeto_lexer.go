// Code generated from /home/reiyo/Project/Go/MarionetteEnsemble/Puppeto/grammars/PuppetoLexer.g4 by ANTLR 4.12.0. DO NOT EDIT.

package lib

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr4-go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type PuppetoLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var puppetolexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func puppetolexerLexerInit() {
	staticData := &puppetolexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'...'", "'return'", "'nan'", "'<'", "'>'", "'<?pup'", "'?>'", "'<?='",
		"'=?>'", "", "", "'=='", "'!='", "'<='", "'>='", "'for'", "'='", "'echo'",
		"'{'", "'}'", "','", "'['", "']'", "'fn'", "'('", "')'", "'&&'", "'||'",
		"':'", "'.'", "'+'", "'-'", "'**'", "'%'", "'&'", "'|'", "'^'", "'<<'",
		"'>>'", "'!'", "'if'", "'else'", "'switch'", "'case'", "'break'", "'try'",
		"'continue'", "'catch'", "'default'", "'let'", "'*'", "'/'", "", "",
		"'nil'",
	}
	staticData.symbolicNames = []string{
		"", "SPREAD", "RETURN", "NAN", "LT", "GT", "PUP_START_TAG", "PUP_END_TAG",
		"PUP_SHORT_START_TAG", "PUP_SHORT_END_TAG", "TWO_SIDES_OPERATOR", "ONE_SIDE_OPERATOR",
		"EQ", "NEQ", "LTOE", "GTOE", "FOR", "TO", "ECHO", "L_CURLY", "R_CURLY",
		"COMMA", "L_SQUARE", "R_SQUARE", "FN", "L_PARENTHES", "R_PARENTHES",
		"AND", "OR", "COLON", "DOT", "PLUS", "MINUS", "DOUBLE_STAR", "PERCENT",
		"BAND", "BOR", "BXOR", "BLS", "BRS", "NOT", "IF", "ELSE", "SWITCH",
		"CASE", "BREAK", "TRY", "CONTINUE", "CATCH", "DEFAULT", "LET", "STAR",
		"SLASH", "FLOAT", "INTEGER", "NIL", "BOOLEAN", "IDENTIFIER", "STRING",
		"WS", "SEMICOLON", "HTML",
	}
	staticData.ruleNames = []string{
		"SPREAD", "RETURN", "NAN", "LT", "GT", "PUP_START_TAG", "PUP_END_TAG",
		"PUP_SHORT_START_TAG", "PUP_SHORT_END_TAG", "TWO_SIDES_OPERATOR", "ONE_SIDE_OPERATOR",
		"EQ", "NEQ", "LTOE", "GTOE", "FOR", "TO", "ECHO", "L_CURLY", "R_CURLY",
		"COMMA", "L_SQUARE", "R_SQUARE", "FN", "L_PARENTHES", "R_PARENTHES",
		"AND", "OR", "COLON", "DOT", "PLUS", "MINUS", "DOUBLE_STAR", "PERCENT",
		"BAND", "BOR", "BXOR", "BLS", "BRS", "NOT", "IF", "ELSE", "SWITCH",
		"CASE", "BREAK", "TRY", "CONTINUE", "CATCH", "DEFAULT", "LET", "STAR",
		"SLASH", "DIGIT", "FLOAT", "INTEGER", "NIL", "BOOLEAN", "IDENTIFIER_START",
		"IDENTIFIER_END", "IDENTIFIER", "STRING", "WS", "SEMICOLON", "HTML",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 61, 441, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5,
		1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8,
		1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 3, 9, 185,
		8, 9, 1, 10, 1, 10, 1, 10, 1, 10, 3, 10, 191, 8, 10, 1, 11, 1, 11, 1, 11,
		1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 15, 1,
		15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18,
		1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1,
		23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27,
		1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1,
		32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37,
		1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1,
		41, 1, 41, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42,
		1, 42, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 1,
		44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46,
		1, 46, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1,
		48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49,
		1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 3, 53, 330, 8,
		53, 1, 53, 4, 53, 333, 8, 53, 11, 53, 12, 53, 334, 1, 53, 1, 53, 5, 53,
		339, 8, 53, 10, 53, 12, 53, 342, 9, 53, 1, 53, 3, 53, 345, 8, 53, 1, 53,
		1, 53, 4, 53, 349, 8, 53, 11, 53, 12, 53, 350, 3, 53, 353, 8, 53, 1, 54,
		4, 54, 356, 8, 54, 11, 54, 12, 54, 357, 1, 55, 1, 55, 1, 55, 1, 55, 1,
		56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 3, 56, 373,
		8, 56, 1, 57, 3, 57, 376, 8, 57, 1, 58, 1, 58, 3, 58, 380, 8, 58, 1, 59,
		1, 59, 5, 59, 384, 8, 59, 10, 59, 12, 59, 387, 9, 59, 1, 60, 1, 60, 1,
		60, 1, 60, 5, 60, 393, 8, 60, 10, 60, 12, 60, 396, 9, 60, 1, 60, 1, 60,
		1, 60, 1, 60, 1, 60, 5, 60, 403, 8, 60, 10, 60, 12, 60, 406, 9, 60, 1,
		60, 3, 60, 409, 8, 60, 1, 61, 4, 61, 412, 8, 61, 11, 61, 12, 61, 413, 1,
		61, 1, 61, 1, 62, 4, 62, 419, 8, 62, 11, 62, 12, 62, 420, 1, 62, 1, 62,
		1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 5, 63, 430, 8, 63, 10, 63, 12, 63, 433,
		9, 63, 1, 63, 4, 63, 436, 8, 63, 11, 63, 12, 63, 437, 3, 63, 440, 8, 63,
		1, 437, 0, 64, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9,
		19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18,
		37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27,
		55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36,
		73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45,
		91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105, 0, 107,
		53, 109, 54, 111, 55, 113, 56, 115, 0, 117, 0, 119, 57, 121, 58, 123, 59,
		125, 60, 127, 61, 1, 0, 7, 1, 0, 48, 57, 4, 0, 36, 36, 65, 90, 95, 95,
		97, 122, 1, 0, 39, 39, 1, 0, 34, 34, 3, 0, 9, 10, 13, 13, 32, 32, 1, 0,
		63, 63, 2, 0, 60, 60, 62, 62, 466, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0,
		0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0,
		0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0,
		0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0,
		0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1,
		0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43,
		1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0,
		51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0,
		0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0,
		0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0,
		0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1,
		0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89,
		1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0,
		97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0,
		0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113,
		1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0,
		0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 1, 129, 1, 0, 0, 0, 3, 133, 1,
		0, 0, 0, 5, 140, 1, 0, 0, 0, 7, 144, 1, 0, 0, 0, 9, 146, 1, 0, 0, 0, 11,
		148, 1, 0, 0, 0, 13, 154, 1, 0, 0, 0, 15, 157, 1, 0, 0, 0, 17, 161, 1,
		0, 0, 0, 19, 184, 1, 0, 0, 0, 21, 190, 1, 0, 0, 0, 23, 192, 1, 0, 0, 0,
		25, 195, 1, 0, 0, 0, 27, 198, 1, 0, 0, 0, 29, 201, 1, 0, 0, 0, 31, 204,
		1, 0, 0, 0, 33, 208, 1, 0, 0, 0, 35, 210, 1, 0, 0, 0, 37, 215, 1, 0, 0,
		0, 39, 217, 1, 0, 0, 0, 41, 219, 1, 0, 0, 0, 43, 221, 1, 0, 0, 0, 45, 223,
		1, 0, 0, 0, 47, 225, 1, 0, 0, 0, 49, 228, 1, 0, 0, 0, 51, 230, 1, 0, 0,
		0, 53, 232, 1, 0, 0, 0, 55, 235, 1, 0, 0, 0, 57, 238, 1, 0, 0, 0, 59, 240,
		1, 0, 0, 0, 61, 242, 1, 0, 0, 0, 63, 244, 1, 0, 0, 0, 65, 246, 1, 0, 0,
		0, 67, 249, 1, 0, 0, 0, 69, 251, 1, 0, 0, 0, 71, 253, 1, 0, 0, 0, 73, 255,
		1, 0, 0, 0, 75, 257, 1, 0, 0, 0, 77, 260, 1, 0, 0, 0, 79, 263, 1, 0, 0,
		0, 81, 265, 1, 0, 0, 0, 83, 268, 1, 0, 0, 0, 85, 273, 1, 0, 0, 0, 87, 280,
		1, 0, 0, 0, 89, 285, 1, 0, 0, 0, 91, 291, 1, 0, 0, 0, 93, 295, 1, 0, 0,
		0, 95, 304, 1, 0, 0, 0, 97, 310, 1, 0, 0, 0, 99, 318, 1, 0, 0, 0, 101,
		322, 1, 0, 0, 0, 103, 324, 1, 0, 0, 0, 105, 326, 1, 0, 0, 0, 107, 352,
		1, 0, 0, 0, 109, 355, 1, 0, 0, 0, 111, 359, 1, 0, 0, 0, 113, 372, 1, 0,
		0, 0, 115, 375, 1, 0, 0, 0, 117, 379, 1, 0, 0, 0, 119, 381, 1, 0, 0, 0,
		121, 408, 1, 0, 0, 0, 123, 411, 1, 0, 0, 0, 125, 418, 1, 0, 0, 0, 127,
		439, 1, 0, 0, 0, 129, 130, 5, 46, 0, 0, 130, 131, 5, 46, 0, 0, 131, 132,
		5, 46, 0, 0, 132, 2, 1, 0, 0, 0, 133, 134, 5, 114, 0, 0, 134, 135, 5, 101,
		0, 0, 135, 136, 5, 116, 0, 0, 136, 137, 5, 117, 0, 0, 137, 138, 5, 114,
		0, 0, 138, 139, 5, 110, 0, 0, 139, 4, 1, 0, 0, 0, 140, 141, 5, 110, 0,
		0, 141, 142, 5, 97, 0, 0, 142, 143, 5, 110, 0, 0, 143, 6, 1, 0, 0, 0, 144,
		145, 5, 60, 0, 0, 145, 8, 1, 0, 0, 0, 146, 147, 5, 62, 0, 0, 147, 10, 1,
		0, 0, 0, 148, 149, 5, 60, 0, 0, 149, 150, 5, 63, 0, 0, 150, 151, 5, 112,
		0, 0, 151, 152, 5, 117, 0, 0, 152, 153, 5, 112, 0, 0, 153, 12, 1, 0, 0,
		0, 154, 155, 5, 63, 0, 0, 155, 156, 5, 62, 0, 0, 156, 14, 1, 0, 0, 0, 157,
		158, 5, 60, 0, 0, 158, 159, 5, 63, 0, 0, 159, 160, 5, 61, 0, 0, 160, 16,
		1, 0, 0, 0, 161, 162, 5, 61, 0, 0, 162, 163, 5, 63, 0, 0, 163, 164, 5,
		62, 0, 0, 164, 18, 1, 0, 0, 0, 165, 166, 5, 43, 0, 0, 166, 185, 5, 61,
		0, 0, 167, 168, 5, 45, 0, 0, 168, 185, 5, 61, 0, 0, 169, 170, 5, 42, 0,
		0, 170, 185, 5, 61, 0, 0, 171, 172, 5, 47, 0, 0, 172, 185, 5, 61, 0, 0,
		173, 174, 5, 38, 0, 0, 174, 185, 5, 61, 0, 0, 175, 176, 5, 124, 0, 0, 176,
		185, 5, 61, 0, 0, 177, 178, 5, 94, 0, 0, 178, 185, 5, 61, 0, 0, 179, 180,
		5, 42, 0, 0, 180, 181, 5, 42, 0, 0, 181, 185, 5, 61, 0, 0, 182, 183, 5,
		37, 0, 0, 183, 185, 5, 61, 0, 0, 184, 165, 1, 0, 0, 0, 184, 167, 1, 0,
		0, 0, 184, 169, 1, 0, 0, 0, 184, 171, 1, 0, 0, 0, 184, 173, 1, 0, 0, 0,
		184, 175, 1, 0, 0, 0, 184, 177, 1, 0, 0, 0, 184, 179, 1, 0, 0, 0, 184,
		182, 1, 0, 0, 0, 185, 20, 1, 0, 0, 0, 186, 187, 5, 43, 0, 0, 187, 191,
		5, 43, 0, 0, 188, 189, 5, 45, 0, 0, 189, 191, 5, 45, 0, 0, 190, 186, 1,
		0, 0, 0, 190, 188, 1, 0, 0, 0, 191, 22, 1, 0, 0, 0, 192, 193, 5, 61, 0,
		0, 193, 194, 5, 61, 0, 0, 194, 24, 1, 0, 0, 0, 195, 196, 5, 33, 0, 0, 196,
		197, 5, 61, 0, 0, 197, 26, 1, 0, 0, 0, 198, 199, 5, 60, 0, 0, 199, 200,
		5, 61, 0, 0, 200, 28, 1, 0, 0, 0, 201, 202, 5, 62, 0, 0, 202, 203, 5, 61,
		0, 0, 203, 30, 1, 0, 0, 0, 204, 205, 5, 102, 0, 0, 205, 206, 5, 111, 0,
		0, 206, 207, 5, 114, 0, 0, 207, 32, 1, 0, 0, 0, 208, 209, 5, 61, 0, 0,
		209, 34, 1, 0, 0, 0, 210, 211, 5, 101, 0, 0, 211, 212, 5, 99, 0, 0, 212,
		213, 5, 104, 0, 0, 213, 214, 5, 111, 0, 0, 214, 36, 1, 0, 0, 0, 215, 216,
		5, 123, 0, 0, 216, 38, 1, 0, 0, 0, 217, 218, 5, 125, 0, 0, 218, 40, 1,
		0, 0, 0, 219, 220, 5, 44, 0, 0, 220, 42, 1, 0, 0, 0, 221, 222, 5, 91, 0,
		0, 222, 44, 1, 0, 0, 0, 223, 224, 5, 93, 0, 0, 224, 46, 1, 0, 0, 0, 225,
		226, 5, 102, 0, 0, 226, 227, 5, 110, 0, 0, 227, 48, 1, 0, 0, 0, 228, 229,
		5, 40, 0, 0, 229, 50, 1, 0, 0, 0, 230, 231, 5, 41, 0, 0, 231, 52, 1, 0,
		0, 0, 232, 233, 5, 38, 0, 0, 233, 234, 5, 38, 0, 0, 234, 54, 1, 0, 0, 0,
		235, 236, 5, 124, 0, 0, 236, 237, 5, 124, 0, 0, 237, 56, 1, 0, 0, 0, 238,
		239, 5, 58, 0, 0, 239, 58, 1, 0, 0, 0, 240, 241, 5, 46, 0, 0, 241, 60,
		1, 0, 0, 0, 242, 243, 5, 43, 0, 0, 243, 62, 1, 0, 0, 0, 244, 245, 5, 45,
		0, 0, 245, 64, 1, 0, 0, 0, 246, 247, 5, 42, 0, 0, 247, 248, 5, 42, 0, 0,
		248, 66, 1, 0, 0, 0, 249, 250, 5, 37, 0, 0, 250, 68, 1, 0, 0, 0, 251, 252,
		5, 38, 0, 0, 252, 70, 1, 0, 0, 0, 253, 254, 5, 124, 0, 0, 254, 72, 1, 0,
		0, 0, 255, 256, 5, 94, 0, 0, 256, 74, 1, 0, 0, 0, 257, 258, 5, 60, 0, 0,
		258, 259, 5, 60, 0, 0, 259, 76, 1, 0, 0, 0, 260, 261, 5, 62, 0, 0, 261,
		262, 5, 62, 0, 0, 262, 78, 1, 0, 0, 0, 263, 264, 5, 33, 0, 0, 264, 80,
		1, 0, 0, 0, 265, 266, 5, 105, 0, 0, 266, 267, 5, 102, 0, 0, 267, 82, 1,
		0, 0, 0, 268, 269, 5, 101, 0, 0, 269, 270, 5, 108, 0, 0, 270, 271, 5, 115,
		0, 0, 271, 272, 5, 101, 0, 0, 272, 84, 1, 0, 0, 0, 273, 274, 5, 115, 0,
		0, 274, 275, 5, 119, 0, 0, 275, 276, 5, 105, 0, 0, 276, 277, 5, 116, 0,
		0, 277, 278, 5, 99, 0, 0, 278, 279, 5, 104, 0, 0, 279, 86, 1, 0, 0, 0,
		280, 281, 5, 99, 0, 0, 281, 282, 5, 97, 0, 0, 282, 283, 5, 115, 0, 0, 283,
		284, 5, 101, 0, 0, 284, 88, 1, 0, 0, 0, 285, 286, 5, 98, 0, 0, 286, 287,
		5, 114, 0, 0, 287, 288, 5, 101, 0, 0, 288, 289, 5, 97, 0, 0, 289, 290,
		5, 107, 0, 0, 290, 90, 1, 0, 0, 0, 291, 292, 5, 116, 0, 0, 292, 293, 5,
		114, 0, 0, 293, 294, 5, 121, 0, 0, 294, 92, 1, 0, 0, 0, 295, 296, 5, 99,
		0, 0, 296, 297, 5, 111, 0, 0, 297, 298, 5, 110, 0, 0, 298, 299, 5, 116,
		0, 0, 299, 300, 5, 105, 0, 0, 300, 301, 5, 110, 0, 0, 301, 302, 5, 117,
		0, 0, 302, 303, 5, 101, 0, 0, 303, 94, 1, 0, 0, 0, 304, 305, 5, 99, 0,
		0, 305, 306, 5, 97, 0, 0, 306, 307, 5, 116, 0, 0, 307, 308, 5, 99, 0, 0,
		308, 309, 5, 104, 0, 0, 309, 96, 1, 0, 0, 0, 310, 311, 5, 100, 0, 0, 311,
		312, 5, 101, 0, 0, 312, 313, 5, 102, 0, 0, 313, 314, 5, 97, 0, 0, 314,
		315, 5, 117, 0, 0, 315, 316, 5, 108, 0, 0, 316, 317, 5, 116, 0, 0, 317,
		98, 1, 0, 0, 0, 318, 319, 5, 108, 0, 0, 319, 320, 5, 101, 0, 0, 320, 321,
		5, 116, 0, 0, 321, 100, 1, 0, 0, 0, 322, 323, 5, 42, 0, 0, 323, 102, 1,
		0, 0, 0, 324, 325, 5, 47, 0, 0, 325, 104, 1, 0, 0, 0, 326, 327, 7, 0, 0,
		0, 327, 106, 1, 0, 0, 0, 328, 330, 5, 45, 0, 0, 329, 328, 1, 0, 0, 0, 329,
		330, 1, 0, 0, 0, 330, 332, 1, 0, 0, 0, 331, 333, 3, 105, 52, 0, 332, 331,
		1, 0, 0, 0, 333, 334, 1, 0, 0, 0, 334, 332, 1, 0, 0, 0, 334, 335, 1, 0,
		0, 0, 335, 336, 1, 0, 0, 0, 336, 340, 5, 46, 0, 0, 337, 339, 3, 105, 52,
		0, 338, 337, 1, 0, 0, 0, 339, 342, 1, 0, 0, 0, 340, 338, 1, 0, 0, 0, 340,
		341, 1, 0, 0, 0, 341, 353, 1, 0, 0, 0, 342, 340, 1, 0, 0, 0, 343, 345,
		5, 45, 0, 0, 344, 343, 1, 0, 0, 0, 344, 345, 1, 0, 0, 0, 345, 346, 1, 0,
		0, 0, 346, 348, 5, 46, 0, 0, 347, 349, 3, 105, 52, 0, 348, 347, 1, 0, 0,
		0, 349, 350, 1, 0, 0, 0, 350, 348, 1, 0, 0, 0, 350, 351, 1, 0, 0, 0, 351,
		353, 1, 0, 0, 0, 352, 329, 1, 0, 0, 0, 352, 344, 1, 0, 0, 0, 353, 108,
		1, 0, 0, 0, 354, 356, 3, 105, 52, 0, 355, 354, 1, 0, 0, 0, 356, 357, 1,
		0, 0, 0, 357, 355, 1, 0, 0, 0, 357, 358, 1, 0, 0, 0, 358, 110, 1, 0, 0,
		0, 359, 360, 5, 110, 0, 0, 360, 361, 5, 105, 0, 0, 361, 362, 5, 108, 0,
		0, 362, 112, 1, 0, 0, 0, 363, 364, 5, 116, 0, 0, 364, 365, 5, 114, 0, 0,
		365, 366, 5, 117, 0, 0, 366, 373, 5, 101, 0, 0, 367, 368, 5, 102, 0, 0,
		368, 369, 5, 97, 0, 0, 369, 370, 5, 108, 0, 0, 370, 371, 5, 115, 0, 0,
		371, 373, 5, 101, 0, 0, 372, 363, 1, 0, 0, 0, 372, 367, 1, 0, 0, 0, 373,
		114, 1, 0, 0, 0, 374, 376, 7, 1, 0, 0, 375, 374, 1, 0, 0, 0, 376, 116,
		1, 0, 0, 0, 377, 380, 3, 115, 57, 0, 378, 380, 3, 105, 52, 0, 379, 377,
		1, 0, 0, 0, 379, 378, 1, 0, 0, 0, 380, 118, 1, 0, 0, 0, 381, 385, 3, 115,
		57, 0, 382, 384, 3, 117, 58, 0, 383, 382, 1, 0, 0, 0, 384, 387, 1, 0, 0,
		0, 385, 383, 1, 0, 0, 0, 385, 386, 1, 0, 0, 0, 386, 120, 1, 0, 0, 0, 387,
		385, 1, 0, 0, 0, 388, 394, 5, 39, 0, 0, 389, 393, 8, 2, 0, 0, 390, 391,
		5, 92, 0, 0, 391, 393, 9, 0, 0, 0, 392, 389, 1, 0, 0, 0, 392, 390, 1, 0,
		0, 0, 393, 396, 1, 0, 0, 0, 394, 392, 1, 0, 0, 0, 394, 395, 1, 0, 0, 0,
		395, 397, 1, 0, 0, 0, 396, 394, 1, 0, 0, 0, 397, 409, 5, 39, 0, 0, 398,
		404, 5, 34, 0, 0, 399, 403, 8, 3, 0, 0, 400, 401, 5, 92, 0, 0, 401, 403,
		9, 0, 0, 0, 402, 399, 1, 0, 0, 0, 402, 400, 1, 0, 0, 0, 403, 406, 1, 0,
		0, 0, 404, 402, 1, 0, 0, 0, 404, 405, 1, 0, 0, 0, 405, 407, 1, 0, 0, 0,
		406, 404, 1, 0, 0, 0, 407, 409, 5, 34, 0, 0, 408, 388, 1, 0, 0, 0, 408,
		398, 1, 0, 0, 0, 409, 122, 1, 0, 0, 0, 410, 412, 7, 4, 0, 0, 411, 410,
		1, 0, 0, 0, 412, 413, 1, 0, 0, 0, 413, 411, 1, 0, 0, 0, 413, 414, 1, 0,
		0, 0, 414, 415, 1, 0, 0, 0, 415, 416, 6, 61, 0, 0, 416, 124, 1, 0, 0, 0,
		417, 419, 5, 59, 0, 0, 418, 417, 1, 0, 0, 0, 419, 420, 1, 0, 0, 0, 420,
		418, 1, 0, 0, 0, 420, 421, 1, 0, 0, 0, 421, 422, 1, 0, 0, 0, 422, 423,
		6, 62, 0, 0, 423, 126, 1, 0, 0, 0, 424, 425, 5, 60, 0, 0, 425, 426, 8,
		5, 0, 0, 426, 427, 8, 5, 0, 0, 427, 431, 5, 62, 0, 0, 428, 430, 3, 127,
		63, 0, 429, 428, 1, 0, 0, 0, 430, 433, 1, 0, 0, 0, 431, 429, 1, 0, 0, 0,
		431, 432, 1, 0, 0, 0, 432, 440, 1, 0, 0, 0, 433, 431, 1, 0, 0, 0, 434,
		436, 8, 6, 0, 0, 435, 434, 1, 0, 0, 0, 436, 437, 1, 0, 0, 0, 437, 438,
		1, 0, 0, 0, 437, 435, 1, 0, 0, 0, 438, 440, 1, 0, 0, 0, 439, 424, 1, 0,
		0, 0, 439, 435, 1, 0, 0, 0, 440, 128, 1, 0, 0, 0, 24, 0, 184, 190, 329,
		334, 340, 344, 350, 352, 357, 372, 375, 379, 385, 392, 394, 402, 404, 408,
		413, 420, 431, 437, 439, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// PuppetoLexerInit initializes any static state used to implement PuppetoLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewPuppetoLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func PuppetoLexerInit() {
	staticData := &puppetolexerLexerStaticData
	staticData.once.Do(puppetolexerLexerInit)
}

// NewPuppetoLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewPuppetoLexer(input antlr.CharStream) *PuppetoLexer {
	PuppetoLexerInit()
	l := new(PuppetoLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &puppetolexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "PuppetoLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// PuppetoLexer tokens.
const (
	PuppetoLexerSPREAD              = 1
	PuppetoLexerRETURN              = 2
	PuppetoLexerNAN                 = 3
	PuppetoLexerLT                  = 4
	PuppetoLexerGT                  = 5
	PuppetoLexerPUP_START_TAG       = 6
	PuppetoLexerPUP_END_TAG         = 7
	PuppetoLexerPUP_SHORT_START_TAG = 8
	PuppetoLexerPUP_SHORT_END_TAG   = 9
	PuppetoLexerTWO_SIDES_OPERATOR  = 10
	PuppetoLexerONE_SIDE_OPERATOR   = 11
	PuppetoLexerEQ                  = 12
	PuppetoLexerNEQ                 = 13
	PuppetoLexerLTOE                = 14
	PuppetoLexerGTOE                = 15
	PuppetoLexerFOR                 = 16
	PuppetoLexerTO                  = 17
	PuppetoLexerECHO                = 18
	PuppetoLexerL_CURLY             = 19
	PuppetoLexerR_CURLY             = 20
	PuppetoLexerCOMMA               = 21
	PuppetoLexerL_SQUARE            = 22
	PuppetoLexerR_SQUARE            = 23
	PuppetoLexerFN                  = 24
	PuppetoLexerL_PARENTHES         = 25
	PuppetoLexerR_PARENTHES         = 26
	PuppetoLexerAND                 = 27
	PuppetoLexerOR                  = 28
	PuppetoLexerCOLON               = 29
	PuppetoLexerDOT                 = 30
	PuppetoLexerPLUS                = 31
	PuppetoLexerMINUS               = 32
	PuppetoLexerDOUBLE_STAR         = 33
	PuppetoLexerPERCENT             = 34
	PuppetoLexerBAND                = 35
	PuppetoLexerBOR                 = 36
	PuppetoLexerBXOR                = 37
	PuppetoLexerBLS                 = 38
	PuppetoLexerBRS                 = 39
	PuppetoLexerNOT                 = 40
	PuppetoLexerIF                  = 41
	PuppetoLexerELSE                = 42
	PuppetoLexerSWITCH              = 43
	PuppetoLexerCASE                = 44
	PuppetoLexerBREAK               = 45
	PuppetoLexerTRY                 = 46
	PuppetoLexerCONTINUE            = 47
	PuppetoLexerCATCH               = 48
	PuppetoLexerDEFAULT             = 49
	PuppetoLexerLET                 = 50
	PuppetoLexerSTAR                = 51
	PuppetoLexerSLASH               = 52
	PuppetoLexerFLOAT               = 53
	PuppetoLexerINTEGER             = 54
	PuppetoLexerNIL                 = 55
	PuppetoLexerBOOLEAN             = 56
	PuppetoLexerIDENTIFIER          = 57
	PuppetoLexerSTRING              = 58
	PuppetoLexerWS                  = 59
	PuppetoLexerSEMICOLON           = 60
	PuppetoLexerHTML                = 61
)
